@inherits LayoutComponentBase
@inject IJSRuntime JSRuntime
@inject GemanoInterfaceManager GemanoInterfaceManager

<CascadingValue Value="GemanoInterfaceManager" Name="GemanoInterfaceManager">
    <div class="app-container">
        @if (init)
        {
            <div class="app-header">
                <div class="header-container left">
                    <h1>Gemano</h1>
                </div>

                <div class="header-container center">
                </div>

                <div class="header-container right">
                    @if (status == 0)
                    {
                        <button @onclick="test">
                            New Chat
                        </button>
                    }
                </div>
            </div>

            <div class="app-main">

                @if (status == 0)
                {
                    @Body
                }
                else
                {
                    @switch (status)
                    {
                        default:
                        case 10:
                            <h1>Loading ...</h1>
                            <p>Please wait</p>
                            break;

                        case 1:
                            <h1>Available after download</h1>
                            <p>See README</p>
                            break;

                        case -2:
                            <h1>Supported but not available</h1>
                            <p>See README</p>
                            break;

                        case -3:
                            <h1>Unsupported or unavailable</h1>
                            <p>See README</p>
                            break;
                    }
                }
            </div>
        }
        else
        {
            <div class="app-main loading">
                <h4>
                    Initializing ...
                </h4>
            </div>
        }
    </div>
</CascadingValue>

@code {
    bool init = false;

    int status = 10;

    protected override async Task OnParametersSetAsync()
    {
        init = await GemanoInterfaceManager.LoadAsync();

        await Task.Delay(3500);

        status = await GemanoInterfaceManager.ChatInterface.GetStatus();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
           

        }
    }

    async Task test()
    {
        status = await GemanoInterfaceManager.ChatInterface.CreateSession();
    }
}
